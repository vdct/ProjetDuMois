a.d-inline-block.d-md-none.w-100.text-center.mb-1(href="/" title=__("Retour à la page d'accueil"))
	img(style="max-width: 100%; height: 40px" src="/images/logo_mini.png" alt=__("Projet du mois"))


//- Switch between map and list
div.btn-group.w-100.mb-2.mt-2(role="group")
	button.btn.btn-secondary.w-50(type="button" disabled="")
		i.fa.fa-map.mr-1
		| #{__("Carte")}
	a.btn.btn-outline-secondary.w-50(href=`/projects/${name}/issues` role="button")
		i.fa.fa-list.mr-1
		| #{__("Liste")}

//- Legend entries
div.map-legend.mb-2.pb-2(style="border-bottom: 1px solid #bbb")
	each lg in legend
		if lg.media == "vector"
			label.switch(id=`pdm-legend-${lg.layerId}` title=__("Afficher/masquer la couche"))
				div.pdm-color-patch(style=`border-color: ${lg.color}`)

				div.switch-text= lg.label
				div.switch-box
					input(type="checkbox")
					span.slider.round

//- Editor button
if editors.pdm
	div#legend-edit-button.mb-2

//- Background legend
div.map-background-container.px-3
	div.map-background.mt-2.py-2(style="border-top: 1px solid #bbb;")
		each lg in legend
			if lg.media != "vector"
				label.switch(id=`pdm-legend-${lg.layerId}` title=__("Afficher/masquer la couche"))
					img.pdm-raster-patch(src=`/images/imagery/${lg.icon || "other"}.svg`)

					div.switch-text= lg.label
					div.switch-box
						input(type="checkbox")
						span.slider.round

//- Make legend symbol clickable to enable/disable layer
-
	const legendClickEvents = legend
		.map((lg,i) => {
			let makeVisible = lg.media == "raster" ? `map.setLayoutProperty("${lg.layerId}", "visibility", "visible");` : `map.setFilter('${lg.layerId}', null);`;
			let makeInvisible = lg.media == "raster" ? `map.setLayoutProperty("${lg.layerId}", "visibility", "none");` : `map.setFilter('${lg.layerId}', ['boolean', false]);`;
			return `
				const domLegend${i} = document.getElementById('pdm-legend-${lg.layerId}').querySelector("input");
				domLegend${i}.checked = ${lg.media == "raster" ? "false" : "true"};
				domLegend${i}.addEventListener("change", e => {
					if(domLegend${i}.checked) {
						${makeVisible}
					}else {
						${makeInvisible}
					}
				});`
		})
		.join("\n");

script !{legendClickEvents}

//- KML Export button
a#pdm-export-kml.btn.btn-block.btn-outline-secondary(role="button" title=__("Télécharger un fichier KML pour contribuer avec une application de smartphone"))
	i.fa.fa-download.mr-1
	| #{__("Exporter les points à vérifier")}

script.
	const osmoseLabels = !{JSON.stringify(osmoseLabels)};
	const btnExportKml = document.getElementById("pdm-export-kml");

	function updateExportKmlLink() {
		if(osmoseLabels && Object.keys(osmoseLabels).length > 0) {
			const items = Object.keys(osmoseLabels).map(ol => ol.split("_")[0]).join(",");
			const classes = Object.keys(osmoseLabels).length > 1 ? "all" : Object.keys(osmoseLabels)[0].split("_").pop();
			const params = `item=${items}&class=${classes !== "all" ? classes : ""}`;
			const bbox = `${map.getBounds()._sw.lng}%2C${map.getBounds()._sw.lat}%2C${map.getBounds()._ne.lng}%2C${map.getBounds()._ne.lat}`;
			btnExportKml.href = `#{CONFIG.OSMOSE_URL}/fr/errors.kml?zoom=${map.getZoom()}&${params}&bbox=${bbox}`;
		}
		else {
			btnExportKml.classList.add("d-none");
		}
	}

	window.addEventListener("load", e => {
		updateExportKmlLink();
		map.on("moveend", updateExportKmlLink);
	});
